{"ast":null,"code":"var _jsxFileName = \"/Users/meghna/iCloud Drive (Archive)/Desktop/microsoft_engage_2021_project-1/src/components/DashboardClassroom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport AnnouncementTile from \"./AnnouncementTile\";\nimport firebase from \"../firebase/firebase\";\nimport { useAuthContext } from \"../context/AuthContext\";\nimport { useClassroomContext } from \"../context/ClassroomContext\";\nimport AssignmentTile from \"./AssignmentTile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DashboardClassroom = () => {\n  _s();\n\n  const [question, setQuestion] = useState(\"\");\n  const [driveLink, setDriveLink] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n  const [announcements, setAnnouncements] = useState([]);\n  const [newAnnouncementText, setNewAnnouncementText] = useState(\"\");\n  const {\n    currentUser\n  } = useAuthContext();\n  const {\n    classroomState,\n    updateAssignmentList\n  } = useClassroomContext();\n  useEffect(() => {\n    const response = firebase.firestore().collection(\"users\").doc(currentUser.uid);\n    response.get().then(snapshot => {\n      var questions = [];\n      var teachersList = [];\n      if (snapshot.data() !== undefined) teachersList = snapshot.data().teachers; // if (snapshot.data() !== undefined)\n      //   questions = snapshot.data().assignments;\n      // updateAssignmentList(questions);\n\n      var teacherMap = {};\n      teachersList.forEach(t => {\n        teacherMap[t] = 1;\n      });\n      var announcementsList = [];\n      const res = firebase.firestore().collection(\"users\");\n      res.get().then(snapshot => {\n        snapshot.forEach(user => {\n          if (teacherMap[user.data().email] === 1) {\n            announcementsList.push(...user.data().announcements);\n            questions.push(...user.data().assignments);\n          }\n        });\n        announcementsList = [...new Map(announcementsList.map(item => [item[\"text\"], item])).values()];\n        questions = [...new Map(questions.map(q => [q[\"text\"], q])).values()];\n        console.log(questions);\n        setAnnouncements(announcementsList);\n        updateAssignmentList(questions);\n      });\n    });\n  }, []);\n\n  function addAnnouncement() {\n    if (newAnnouncementText.trim() !== \"\") {\n      const response = firebase.firestore().collection(\"users\").doc(currentUser.uid);\n      response.get().then(snapshot => {\n        var newAnnouncement = {\n          text: newAnnouncementText,\n          author: currentUser.displayName,\n          date: getToday()\n        };\n        var temp = announcements;\n        temp.push(newAnnouncement);\n        setAnnouncements(temp);\n        response.update({\n          announcements: temp\n        });\n      });\n      setNewAnnouncementText(\"\");\n    } else {\n      window.alert(\"An announcement can't be blank!\");\n    }\n  }\n\n  function getToday() {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n    var yyyy = today.getFullYear();\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    return today;\n  }\n\n  function onQuestionSubmit() {\n    if (question.trim() !== \"\") {\n      const response = firebase.firestore().collection(\"users\").doc(currentUser.uid);\n      response.get().then(snapshot => {\n        const newQuestion = {\n          text: question,\n          link: driveLink,\n          author: currentUser.displayName,\n          due: dueDate,\n          answers: []\n        };\n        var questions = [];\n        if (snapshot.data() !== undefined) questions = snapshot.data().assignments;\n        questions.push(newQuestion);\n        response.update({\n          assignments: questions\n        });\n        updateAssignmentList(questions);\n      });\n    } else {\n      window.alert(\"You can't send a blank question!\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex md:flex-row flex-col-reverse\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col w-full md:mt-0 mt-4\",\n        children: [classroomState.isTeacher === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-bold text-xl\",\n            children: \"Make a question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative mt-4 mr-0 md:mr-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute bg-grey-900 w-full h-full -right-2 -bottom-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative flex flex-col bg-white border-2 border-grey-900 space-y-2 px-4 py-4 h-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"font-bold text-xl\",\n                children: \"Q.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: question,\n                onChange: e => setQuestion(e.target.value),\n                className: \"focus:outline-none max-h-max text-lg overflow-hidden\",\n                placeholder: \"Type your question here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: dueDate,\n                onChange: e => setDueDate(e.target.value),\n                className: \"text-sm max-w-max\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: driveLink,\n                onChange: e => setDriveLink(e.target.value),\n                className: \"focus:outline-none text-sm font-bold\",\n                placeholder: \"Add a google drive link (optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-row w-full justify-end\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: onQuestionSubmit,\n                  className: \"bg-grey-900 text-white font-bold px-4 py-2 rounded-md focus:outline-none\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-bold text-xl mt-8\",\n          children: \"Assignments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), classroomState.assignments.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col justify-start items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"mt-16 w-96 opacity-70\",\n            src: \"/images/assignments_image.svg\",\n            alt: \"No assignments for you\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"md:text-lg font-bold text-grey-400 mt-16 md:mr-40 self-center\",\n            children: \"No assignments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col\",\n          children: classroomState.assignments.map((assignment, index) => {\n            return /*#__PURE__*/_jsxDEV(AssignmentTile, {\n              assignment: assignment,\n              index: index,\n              assignmentList: classroomState.assignments\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col w-full max-w-max md:mt-0 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-bold\",\n          children: \"Announcements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col md:mt-4 mt-2 py-2 max-h-max md:w-80 lg:w-96 border-2 border-grey-900\",\n          children: [announcements.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col\",\n            children: announcements.map(ann => {\n              return /*#__PURE__*/_jsxDEV(AnnouncementTile, {\n                announcement: ann\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 26\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row w-full my-2 text-grey-400 justify-center items-center\",\n            children: \"No announcements\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), classroomState.isTeacher === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row justify-between px-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newAnnouncementText,\n              onChange: e => setNewAnnouncementText(e.target.value),\n              placeholder: \"Type here...\",\n              className: \"w-full text-sm focus:outline-none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addAnnouncement,\n              className: \"text-sm bg-grey-200 py-1 px-2\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(DashboardClassroom, \"FTXtcI9rCb3dz0Y3bnRydwmn5us=\", false, function () {\n  return [useAuthContext, useClassroomContext];\n});\n\n_c = DashboardClassroom;\nexport default DashboardClassroom;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardClassroom\");","map":{"version":3,"sources":["/Users/meghna/iCloud Drive (Archive)/Desktop/microsoft_engage_2021_project-1/src/components/DashboardClassroom.js"],"names":["React","useEffect","useState","AnnouncementTile","firebase","useAuthContext","useClassroomContext","AssignmentTile","DashboardClassroom","question","setQuestion","driveLink","setDriveLink","dueDate","setDueDate","announcements","setAnnouncements","newAnnouncementText","setNewAnnouncementText","currentUser","classroomState","updateAssignmentList","response","firestore","collection","doc","uid","get","then","snapshot","questions","teachersList","data","undefined","teachers","teacherMap","forEach","t","announcementsList","res","user","email","push","assignments","Map","map","item","values","q","console","log","addAnnouncement","trim","newAnnouncement","text","author","displayName","date","getToday","temp","update","window","alert","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","onQuestionSubmit","newQuestion","link","due","answers","isTeacher","e","target","value","length","assignment","index","ann"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport AnnouncementTile from \"./AnnouncementTile\";\nimport firebase from \"../firebase/firebase\";\nimport { useAuthContext } from \"../context/AuthContext\";\nimport { useClassroomContext } from \"../context/ClassroomContext\";\nimport AssignmentTile from \"./AssignmentTile\";\n\nconst DashboardClassroom = () => {\n  const [question, setQuestion] = useState(\"\");\n  const [driveLink, setDriveLink] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n\n  const [announcements, setAnnouncements] = useState([]);\n  const [newAnnouncementText, setNewAnnouncementText] = useState(\"\");\n\n  const { currentUser } = useAuthContext();\n  const { classroomState, updateAssignmentList } = useClassroomContext();\n\n  useEffect(() => {\n    const response = firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(currentUser.uid);\n    response.get().then((snapshot) => {\n      var questions = [];\n      var teachersList = [];\n      if (snapshot.data() !== undefined)\n        teachersList = snapshot.data().teachers;\n      // if (snapshot.data() !== undefined)\n      //   questions = snapshot.data().assignments;\n      // updateAssignmentList(questions);\n\n      var teacherMap = {};\n      teachersList.forEach((t) => {\n        teacherMap[t] = 1;\n      });\n\n      var announcementsList = [];\n\n      const res = firebase.firestore().collection(\"users\");\n\n      res.get().then((snapshot) => {\n        snapshot.forEach((user) => {\n          if (teacherMap[user.data().email] === 1) {\n            announcementsList.push(...user.data().announcements);\n            questions.push(...user.data().assignments);\n          }\n        });\n        announcementsList = [\n          ...new Map(\n            announcementsList.map((item) => [item[\"text\"], item])\n          ).values(),\n        ];\n        questions = [...new Map(questions.map((q) => [q[\"text\"], q])).values()];\n        console.log(questions);\n        setAnnouncements(announcementsList);\n        updateAssignmentList(questions);\n      });\n    });\n  }, []);\n\n  function addAnnouncement() {\n    if (newAnnouncementText.trim() !== \"\") {\n      const response = firebase\n        .firestore()\n        .collection(\"users\")\n        .doc(currentUser.uid);\n      response.get().then((snapshot) => {\n        var newAnnouncement = {\n          text: newAnnouncementText,\n          author: currentUser.displayName,\n          date: getToday(),\n        };\n\n        var temp = announcements;\n        temp.push(newAnnouncement);\n        setAnnouncements(temp);\n        response.update({\n          announcements: temp,\n        });\n      });\n      setNewAnnouncementText(\"\");\n    } else {\n      window.alert(\"An announcement can't be blank!\");\n    }\n  }\n\n  function getToday() {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n    var yyyy = today.getFullYear();\n\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    return today;\n  }\n\n  function onQuestionSubmit() {\n    if (question.trim() !== \"\") {\n      const response = firebase\n        .firestore()\n        .collection(\"users\")\n        .doc(currentUser.uid);\n      response.get().then((snapshot) => {\n        const newQuestion = {\n          text: question,\n          link: driveLink,\n          author: currentUser.displayName,\n          due: dueDate,\n          answers: [],\n        };\n        var questions = [];\n        if (snapshot.data() !== undefined)\n          questions = snapshot.data().assignments;\n        questions.push(newQuestion);\n        response.update({\n          assignments: questions,\n        });\n        updateAssignmentList(questions);\n      });\n    } else {\n      window.alert(\"You can't send a blank question!\");\n    }\n  }\n\n  return (\n    <>\n      <div className=\"flex md:flex-row flex-col-reverse\">\n        <div className=\"flex flex-col w-full md:mt-0 mt-4\">\n          {classroomState.isTeacher === true ? (\n            <div>\n              <div className=\"font-bold text-xl\">Make a question</div>\n              <div className=\"relative mt-4 mr-0 md:mr-8\">\n                <div className=\"absolute bg-grey-900 w-full h-full -right-2 -bottom-2\"></div>\n                <div className=\"relative flex flex-col bg-white border-2 border-grey-900 space-y-2 px-4 py-4 h-full\">\n                  <label className=\"font-bold text-xl\">Q.</label>\n                  <textarea\n                    value={question}\n                    onChange={(e) => setQuestion(e.target.value)}\n                    className=\"focus:outline-none max-h-max text-lg overflow-hidden\"\n                    placeholder=\"Type your question here\"\n                  ></textarea>\n                  <input\n                    type=\"date\"\n                    value={dueDate}\n                    onChange={(e) => setDueDate(e.target.value)}\n                    className=\"text-sm max-w-max\"\n                  />\n                  <input\n                    type=\"text\"\n                    value={driveLink}\n                    onChange={(e) => setDriveLink(e.target.value)}\n                    className=\"focus:outline-none text-sm font-bold\"\n                    placeholder=\"Add a google drive link (optional)\"\n                  />\n                  <div className=\"flex flex-row w-full justify-end\">\n                    <button\n                      onClick={onQuestionSubmit}\n                      className=\"bg-grey-900 text-white font-bold px-4 py-2 rounded-md focus:outline-none\"\n                    >\n                      Submit\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div></div>\n          )}\n          <div className=\"font-bold text-xl mt-8\">Assignments</div>\n          {classroomState.assignments.length === 0 ? (\n            <div className=\"flex flex-col justify-start items-center\">\n              <img\n                className=\"mt-16 w-96 opacity-70\"\n                src=\"/images/assignments_image.svg\"\n                alt=\"No assignments for you\"\n              />\n              <div className=\"md:text-lg font-bold text-grey-400 mt-16 md:mr-40 self-center\">\n                No assignments\n              </div>\n            </div>\n          ) : (\n            <div className=\"flex flex-col\">\n              {classroomState.assignments.map((assignment, index) => {\n                return (\n                  <AssignmentTile\n                    assignment={assignment}\n                    index={index}\n                    assignmentList={classroomState.assignments}\n                  />\n                );\n              })}\n            </div>\n          )}\n        </div>\n        <div className=\"flex flex-col w-full max-w-max md:mt-0 mt-4\">\n          <div className=\"text-lg font-bold\">Announcements</div>\n          <div className=\"flex flex-col md:mt-4 mt-2 py-2 max-h-max md:w-80 lg:w-96 border-2 border-grey-900\">\n            {announcements.length !== 0 ? (\n              <div className=\"flex flex-col\">\n                {announcements.map((ann) => {\n                  return <AnnouncementTile announcement={ann} />;\n                })}\n              </div>\n            ) : (\n              <div className=\"flex flex-row w-full my-2 text-grey-400 justify-center items-center\">\n                No announcements\n              </div>\n            )}\n            {classroomState.isTeacher === true ? (\n              <div className=\"flex flex-row justify-between px-2\">\n                <input\n                  type=\"text\"\n                  value={newAnnouncementText}\n                  onChange={(e) => setNewAnnouncementText(e.target.value)}\n                  placeholder=\"Type here...\"\n                  className=\"w-full text-sm focus:outline-none\"\n                />\n                <button\n                  onClick={addAnnouncement}\n                  className=\"text-sm bg-grey-200 py-1 px-2\"\n                >\n                  Send\n                </button>\n              </div>\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DashboardClassroom;\n"]},"metadata":{},"sourceType":"module"}